{"version":3,"sources":["Components/SlideShowButton.js"],"names":["SlideShowButton","props","context","state","_handleClick","bind","$","refs","playback","addClass","prevProps","prevState","canPlay","removeClass","e","setState","text","document","getElementById","innerHTML","remark","create","createElement","ref","className","onClick","type","defaultProps","propTypes","canplay","PropTypes","bool","string"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;IAEaA,e,WAAAA,e;;;AACZ,0BAAYC,KAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA,gIACpBD,KADoB,EACdC,OADc;;AAE1B,QAAKC,KAAL,GAAa,EAAb;AAEA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AAJ0B;AAK1B;;;;yCAEsB,CACtB;;;sCAEmB;AACnBC,KAAE,KAAKC,IAAL,CAAUC,QAAZ,EAAsBC,QAAtB,CAA+B,UAA/B;AACA;;;qCACkBC,S,EAAWC,S,EAAW;AACxC,OAAG,KAAKV,KAAL,CAAWW,OAAX,KAAuB,IAA1B,EAAgC;AAC/BN,MAAE,KAAKC,IAAL,CAAUC,QAAZ,EAAsBK,WAAtB,CAAkC,UAAlC;AACA,IAFD,MAGI;AACHP,MAAE,KAAKC,IAAL,CAAUC,QAAZ,EAAsBC,QAAtB,CAA+B,UAA/B;AACA;AACD;;;+BACYK,C,EAAG;AACf;AACA,QAAKC,QAAL,CAAc,EAACC,MAAM,KAAKf,KAAL,CAAWe,IAAlB,EAAd;AACA;AACAC,YAASC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,KAAKlB,KAAL,CAAWe,IAAzD;AACA;AACAI,UAAOC,MAAP;AACA;;;2BAEQ;AACR,UACQ,gBAAMC,aAAN,CAAoB,OAApB,EAA6B;AAC5BC,SAAK,UADuB;AAE5BC,eAAW,KAAKvB,KAAL,CAAWuB,SAFM;AAG5BC,aAAS,KAAKrB;AAHc,IAA7B,EAKC,gBAAMkB,aAAN,CAAoB,OAApB,EAA6B;AAC5BI,UAAM,OADsB,EAA7B,CALD,EAQC,gBAAMJ,aAAN,CAAoB,GAApB,EAAyB,EAACE,WAAW,oCAAZ,EAAzB,CARD,CADR;AAYA;;;;;;AAGFxB,gBAAgB2B,YAAhB,GAA+B;AAC9Bf,UAAS,IADqB;AAE9BI,OAAM;AAFwB,CAA/B;AAIAhB,gBAAgB4B,SAAhB,GAA4B;AAC3BC,UAAS,gBAAMC,SAAN,CAAgBC,IADE;AAE3Bf,OAAM,gBAAMc,SAAN,CAAgBE;AAFK,CAA5B","file":"SlideShowButton.js","sourcesContent":["import React,{ Component } from 'react';\r\n\r\nexport class SlideShowButton extends Component {\r\n\tconstructor(props,context) {\r\n\t\tsuper(props,context);\r\n\t\tthis.state = {\r\n\t\t};\r\n\t\tthis._handleClick = this._handleClick.bind(this);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t$(this.refs.playback).addClass('disabled');\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tif(this.props.canPlay === true) {\r\n\t\t\t$(this.refs.playback).removeClass('disabled');\r\n\t\t}\r\n\t\telse{\r\n\t\t\t$(this.refs.playback).addClass('disabled');\r\n\t\t}\r\n\t}\r\n\t_handleClick(e) {\r\n\t\t//catch 文字輸入區域的內容放到自己component的狀態\r\n\t\tthis.setState({text: this.props.text});\r\n\t\t//根據github wiki，將markdown的本文放到ID為source的區塊\r\n\t\tdocument.getElementById('source').innerHTML = this.props.text;\r\n\t\t//remark function\r\n\t\tremark.create();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t        React.createElement(\"label\", {\r\n\t\t        \tref: \"playback\", \r\n\t\t        \tclassName: this.props.className, \r\n\t\t        \tonClick: this._handleClick\r\n\t\t        }, \r\n\t\t        \tReact.createElement(\"input\", {\r\n\t\t        \t\ttype: \"radio\"}\r\n\t\t        \t), \r\n\t\t        \tReact.createElement(\"i\", {className: \"glyphicon glyphicon-facetime-video\"})\r\n\t\t        )\r\n\t\t);\r\n\t}\r\n}\r\n\r\nSlideShowButton.defaultProps = {\r\n\tcanPlay: true,\r\n\ttext: ''\t\r\n}\r\nSlideShowButton.propTypes = {\r\n\tcanplay: React.PropTypes.bool,\r\n\ttext: React.PropTypes.string\r\n}"]}