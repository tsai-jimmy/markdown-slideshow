{"version":3,"sources":["hello.js"],"names":["SlideShowButton","React","createClass","displayName","handleClick","event","preventDefault","$","props","hideTarget","addClass","slideshow","remark","create","render","createElement","type","onClick","className","value","MarkdownTextArea","componentDidMount","rows","onChange","handleChange","MarkdownLiveEditor","markdownGithubParser","data","self","ajax","method","url","dataType","processData","contentType","success","setState","error","xhr","status","err","markdownLocalParser","converter","makeHtml","parser","markdownParsers","markdownParser","showdown","Converter","local","github","getInitialState","target","text","livePreviewTarget","html","state","ReactDOM","id","document","getElementById"],"mappings":"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","file":"hello.js","sourcesContent":["var SlideShowButton = React.createClass({displayName: \"SlideShowButton\",\n  handleClick: function(event) {\n    event.preventDefault();\n\n    // use Flux pattern to arrange this\n    $(this.props.hideTarget).addClass('hide');\n\n    var slideshow = remark.create();\n  },\n  render: function() {\n    return (\n        React.createElement(\"input\", {\n        type: \"submit\", \n        onClick: this.handleClick, \n        className: \"btn btn-default\", \n        value: this.props.value})\n    )\n  }\n});\n\nvar MarkdownTextArea = React.createClass({displayName: \"MarkdownTextArea\",\n  componentDidMount: function() {\n  },\n  render: function() {\n    return (\n      React.createElement(\"textarea\", {\n      rows: this.props.rows, \n      className: this.props.className, \n      onChange: this.props.handleChange})\n    );\n  }\n});\n\nvar MarkdownLiveEditor = React.createClass({displayName: \"MarkdownLiveEditor\",\n  markdownGithubParser: function(data) {\n    var self = this;\n    $.ajax({\n      method: 'POST',\n      url: 'https://api.github.com/markdown/raw',\n      dataType: \"html\",\n      processData: false,\n      data: data,\n      contentType: \"text/plain\",\n      success: function(data) {\n        self.setState({\n          data: data\n        });\n      },\n      error: function(xhr, status, err) {\n        self.setState({\n          data: status\n        });\n      }\n    });\n  },\n  markdownLocalParser: function(data) {\n    var data = this.converter.makeHtml(data);\n    this.setState({\n      data: data\n    });\n  },\n  parser: function(data) {\n    if (typeof this.markdownParsers[this.props.markdownParser] === \"function\") {\n      this.markdownParsers[this.props.markdownParser](data);\n    }\n  },\n  componentDidMount: function() {\n    this.converter = new showdown.Converter();\n\n    this.markdownParsers = {\n      local: this.markdownLocalParser,\n      github: this.markdownGithubParser\n    };\n  },\n  getInitialState: function() {\n    return {\n      data: ''\n    };\n  },\n  handleChange: function(event) {\n    // Parse markdown\n    this.parser(event.target.value);\n\n    // use Flux pattern to arrange this\n    $('#source').text(event.target.value)\n  },\n  render: function() {\n    // Live preview\n    $(this.props.livePreviewTarget).html(this.state.data);\n\n    return (\n        React.createElement(MarkdownTextArea, {\n        handleChange: this.handleChange, \n        rows: this.props.rows, \n        livePreviewTarget: this.props.target, \n        className: this.props.className, \n        markdownParser: this.props.markdownParser})\n    )\n  }\n});\n\nReactDOM.render(\n  React.createElement(\"div\", {className: \"container\"}, \n    React.createElement(\"div\", {className: \"row\"}, \n      React.createElement(\"div\", {className: \"col-md-6 col-xs-6 col-lg-6\", id: \"container\"}, \n        React.createElement(SlideShowButton, {hideTarget: \"#editor\", value: \"Slide Now\"}), \n        React.createElement(MarkdownLiveEditor, {className: \"form-control\", rows: \"25\", livePreviewTarget: \"#article\", markdownParser: \"local\"})\n      ), \n      React.createElement(\"div\", {className: \"col-md-6 col-xs-6 col-lg-6\", id: \"article\"}\n      )\n    )\n  )\n  ,\n  document.getElementById('editor'));"]}